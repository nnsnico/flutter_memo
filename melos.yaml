name: flutter_memo

packages:
  - app
  - domain
  - data/repository
  - data/datastore
  - model

sdkPath: .fvm/flutter_sdk

scripts:
  prepare: melos bs && melos run build_runner:all

# ---------------------------------- run app -----------------------------------

  app:
    run: |
      melos run analyze:all && 
      flutter run
    exec:
      failFast: true
    packageFilters:
      scope: "flutter_memo"

# ------------------------------ run build_runner ------------------------------
 
  build_runner:all:
    run: |
      melos run build_runner:app && 
      melos run build_runner:domain && 
      melos run build_runner:data:repository && 
      melos run build_runner:data:datastore && 
      melos run build_runner:model

  build_runner:app:
    run: |
      flutter pub run build_runner build --delete-conflicting-outputs
    exec:
      failFast: true
    packageFilters:
      scope: "flutter_memo"

  build_runner:domain:
    run: |
      flutter pub run build_runner build --delete-conflicting-outputs
    exec:
      failFast: true
    packageFilters:
      scope: "domain"

  build_runner:data:datastore:
    run: |
      flutter pub run build_runner build --delete-conflicting-outputs
    exec:
      failFast: true
    packageFilters:
      scope: "datastore"

  build_runner:data:repository:
    run: |
      flutter pub run build_runner build --delete-conflicting-outputs
    exec:
      failFast: true
    packageFilters:
      scope: "repository"

  build_runner:model:
    run: |
      flutter pub run build_runner build --delete-conflicting-outputs
    exec:
      failFast: true
    packageFilters:
      scope: "model"

# ---------------------------------- analyze -----------------------------------

  analyze:all:
    run: |
      melos run analyze:model && 
      melos run analyze:data:datastore && 
      melos run analyze:data:repository && 
      melos run analyze:app

  analyze:app:
    run:
      flutter analyze
    exec:
      failFast: true
    packageFilters:
      scope: "flutter_memo"

  analyze:domain:
    run:
      flutter analyze
    exec:
      failFast: true
    packageFilters:
      scope: "domain"

  analyze:model:
    run:
      flutter analyze
    exec:
      failFast: true
    packageFilters:
      scope: "model"

  analyze:data:repository:
    run:
      flutter analyze
    exec:
      failFast: true
    packageFilters:
      scope: "repository"

  analyze:data:datastore:
    run:
      flutter analyze
    exec:
      failFast: true
    packageFilters:
      scope: "datastore"

# ------------------------------------ Test ------------------------------------

  test:all:
    run: |
      melos run test:data:repository && 
      melos run test:data:datastore

  test:app:
    run:
      flutter test
    exec:
      failFast: true
    packageFilters:
      scope: "flutter_memo"

  test:model:
    run: |
      flutter test
    exec:
      failFast: true
    packageFilters:
      scope: "model"

  test:data:repository:
    run: |
      flutter test
    exec:
      failFast: true
    packageFilters:
      scope: "repository"

  test:data:datastore:
    run:
      flutter test
    exec:
      failFast: true
    packageFilters:
      scope: "datastore"

# -------------------------------- dependencies --------------------------------

  deps:app:
    run: flutter pub deps -C app -s compact

  deps:domain:
    run: flutter pub deps -C domain -s compact

  deps:model:
    run: flutter pub deps -C model -s compact

  deps:data:repository:
    run: flutter pub deps -C data/repository -s compact

  deps:data:datastore:
    run: flutter pub deps -C data/datastore -s compact
